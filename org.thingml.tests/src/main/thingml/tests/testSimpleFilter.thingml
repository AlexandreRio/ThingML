import "thingml.thingml"

thing TestSimpleFilter includes Test
@test "f # f"
{
 
    operator filterFSS(input : testIn) : Boolean do
        return input.c == '\'f\''
    end
    
    operator alwaysTrue(input : testIn) : Boolean do
        return 'true'
    end
    
    stream filterSimpleSourceOK do
        from fSS : [ harnessIn?testIn ]::filter(filterFSS(fSS))::filter(alwaysTrue(fSS))
        select a : fSS.c
        action harnessOut!testOut(a)
    end
    
    operator filterFSSFail(input : testIn) : Boolean do
        return input.c == '\'g\''
    end
     
    stream filterSimpleSourceFail do
        from fSS : [ harnessIn?testIn ]::filter(filterFSSFail(fSS))
        select a : fSS.c
        action harnessOut!testOut(a)
    end
    
    statechart testSimpleFilter init Init {
        state Init {}    
    }
    
    
}
