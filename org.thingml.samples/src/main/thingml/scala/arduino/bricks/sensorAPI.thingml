import "../../thingml.thingml"

datatype Device
@scala_type "org.thingml.devices.Device";

thing fragment SensorMsgs 
{
	message update(); 
}

thing fragment SensorAPI includes SensorMsgs
@scala_trait "org.thingml.devices.Observer" 
{
	readonly property device : Device
    property lastValue : Int16 = 0
	
	function newValue(v : Integer)@override "true" : Void
	do
        lastValue = v
		SensorMockUp!update()
	end
	
	function register() : Void
	do
		'' & device & '.register(this)'
	end
	
    /**
     * This makes it possible to notify the concrete Thing
     * mocking the sensor (push mode)
     */
	provided port SensorMockUp {
		sends update
	}

    required port Sensor {
        receives update
    }
}