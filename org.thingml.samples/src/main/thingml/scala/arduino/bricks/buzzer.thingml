import "../../thingml.thingml"
import "../devices/softtimer.thingml"

//TODO Wrap buzzer with something better than a LED ;-)
datatype LedDevice
@scala_type "org.thingml.devices.LedDemo"

thing fragment BuzzerMsgs includes TimerMsgs
{
	message buzzer_on ();
	message buzzer_off ();
	message buzzer_delay (d : UInt16);
}

thing Buzzer includes BuzzerMsgs
{
	readonly property device : LedDevice
    
	provided port Buzzer 
    {
		receives buzzer_on, buzzer_off, buzzer_delay
	}

    required port Timer
    {
    	sends timer_start, timer_cancel
    	receives timer_timeout
    }
    
    statechart BuzzerImpl init BuzzerOff 
    {    
    	on entry device = 'new org.thingml.devices.LedDemo()'
    
        state BuzzerOff 
        {
            on entry 'LED_device_var.off()'
            
            transition switch_on -> BuzzerOn 
            event Buzzer?buzzer_on 
            
            transition delay -> BuzzerOn
            event m : Buzzer?buzzer_delay
            action Timer!timer_start (m.d)
        }
        
        state BuzzerOn
        {
            on entry 'LED_device_var.on()'
  
            transition switch_off -> BuzzerOff 
            event Buzzer?buzzer_off 
            event Timer?timer_timeout
            action Timer!timer_cancel ()   
        }
    }
}