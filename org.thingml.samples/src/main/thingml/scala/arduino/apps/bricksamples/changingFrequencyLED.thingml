import "../../../thingml.thingml"
import "../../bricks/led.thingml"
import "../../bricks/potentiometer.thingml"
import "../../devices/softtimer.thingml"

thing ChangingFrequencyLed includes LedMsgs, TimerMsgs, PotentiometerMessages
{
	readonly property frequency : UInt16 = 500
	
	required port Led
	{
		sends led_toggle
	}
			
	required port Potentiometer {
		receives newValue
	}

	required port Timer
	{
		sends timer_start
		receives timer_timeout
	}
		
	statechart behavior init Running
	{
		state Running
		{
			on entry Timer!timer_start (frequency)
			
			transition toggle -> Running
				event Timer?timer_timeout
				action Led!led_toggle ()
			
			transition update -> Running
				event e: Potentiometer?newValue
				action Timer!timer_start(e.value)
		}
	}
}

configuration ScalaSimpleLedSimulator
{
	instance led : Led
	instance potentiometer: Potentiometer		
	instance timer : Timer
	instance controller: ChangingFrequencyLed
	
	connector controller.Timer => timer.timer 
	connector controller.Led => led.Led
	connector controller.Potentiometer => potentiometer.Potentiometer
}