import "../test.thingml"

datatype Dumper
@scala_type "org.thingml.devices.Dumper";

thing TestDumpScala includes TestDump
@thingml_maven_dep "org.thingml.samples.utils"
{
   property device : Dumper  
 	property benchmark: Boolean = false
	
	function write(string : String) 
	do
		
		if (benchmark == false)  do 
			'' & device & '.asInstanceOf[org.thingml.devices.Dumper].write(' & string & ')'
			print(string) 
		end
	end
	
	statechart ScalaHarness init Testing {
		property transitionsCount : Long = 0
 	property stateNumber: String = ""
		
		
		state Testing {
			on entry device = 'new org.thingml.devices.Dumper()'
            
            internal event m : dump?testOut
            action do write(m.c)
            	transitionsCount=transitionsCount+1
            end
            internal event m : dump?perfTestOut
            action do write(''&m.s&'+"\n"')
            	transitionsCount=transitionsCount+1
            end
            
            transition -> Failed 
            event dump?testFailure
            action write("*FAILURE*")
            
            transition -> End
            event dumpEnd?testEnd
            
            transition -> End
            event m : dumpEnd?perfTestSize
            action do '' & device & '.asInstanceOf[org.thingml.devices.Dumper].write(' & m.s & ')'
            end
		}
		
		state Failed {

		}

		state End {
			on entry do
				print("End of thingml processus") 
				'' & device & '.asInstanceOf[org.thingml.devices.Dumper].stop('&transitionsCount&')'
			end
		}
	}
}