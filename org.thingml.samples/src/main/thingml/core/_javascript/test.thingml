import "../test.thingml"

datatype fs;

thing TestDumpJS includes TestDump
@javascript "node"
{
    
    property fs : fs = 'require(\'fs\')'
   
	function write(string : String) 
	do
    	'' & fs & '.appendFile("dump", ' & string & ', function(err){'
        'if(err) ' error("Cannot write to dump file") 
        'else ' print(string)
        '});'
	end
	
	statechart JavaHarness init Testing {
		property transitionsCount : Long = 0
        property time : LongLong = 0
		state Testing {

            internal event m : dump?testOut
            action do
                write(m.c)
            	transitionsCount=transitionsCount+1
            end

            internal event dump?perfTestOut
            action do
                transitionsCount=transitionsCount+1
            end
            
            transition -> Failed 
            event dump?testFailure
            
            transition -> End
            event dumpEnd?testEnd
            
            internal event m: dumpEnd?perfTestSize
            action do
                time = m.time
                transitionsCount=transitionsCount+1
            end
		}
		
		state Failed {
			on entry do
			    write("*FAILURE*")
			    'process.exit(1);'
			end
		}

		state End {
			on entry do
                //write cputime
                '' & fs & '.appendFile("cputime", ' & time & ', function(err){'
                'if(err) ' error("Cannot write to cputime file") 
                'else ' print(time)
                '});'
                
                //write number of transitions
                '' & fs & '.appendFile("transitionsCount", ' & transitionsCount & ', function(err){'
                'if(err) ' error("Cannot write to transitionsCount file") 
                'else ' print(transitionsCount)
                '});'

                'process.exit(0);'
			end
		}
	}
}

configuration test {
    instance t : TestDumpJS   
}