import "../timer.thingml"

// Manage a set of software timers.
thing TimerJava includes Timer
@pim "Timer"
@platform "java"
{

    property stop : Boolean = false
    
    statechart SoftTimer init default {
        state default {

          internal start
            event m : timer?timer_start
            guard m.delay > 0
            action do
            
             'final long start = System.currentTimeMillis();
             Thread t = new Thread(){
              public void run() {
              while(!' & stop & ' && System.currentTimeMillis()-start < ' & m.delay & ') {
                  try {
                    Thread.sleep(1);
                  } catch (Exception ex) {}
              }'
              timer!timer_timeout()
              '}
              };
              t.start();'
                
            end
            
          internal cancel
            event m : timer?timer_cancel
            action stop = true
        }
    }
}

configuration TestTimerJava {
    instance timer : TimerJava
    instance client : SimpleTimerClient
    connector client.timer => timer.timer    
}