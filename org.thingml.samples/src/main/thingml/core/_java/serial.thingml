/* ThingML Framework */

import "../comm.thingml"

datatype JavaSerial
@java_type "org.thingml.comm.rxtx.Serial4ThingML";

thing SerialJava includes IOByteArray
@pim "IOStream"
@platform "java"
@java_interface "org.thingml.comm.rxtx.SerialObserver"
@thingml_maven_dep "org.thingml.utils"
{
    readonly property serialPort : String = "COM4"
    property serial : JavaSerial 
        
	function receive(byte : Byte[18]) 
    @override "true"
    do
        //print("  serial has received: " + '' & byte & '.mkString("[", ", ", "]")')
        IOStream!receive_bytes(byte)
    end
    
    function initSerial() do 
        serial = 'new org.thingml.comm.rxtx.Serial4ThingML(' & serialPort & ', this)'  
    end
        

    statechart behavior init default {
        on entry 
        do
            initSerial()    
            print("Serial port ready!")    
        end
        
        state default {
            internal event wb : IOStream?write_bytes
            action do
               // print("  serial.write: " + '' & wb.b & '.mkString("[", ", ", "]")')
                '' & serial '.sendData(' & wb.b & ');'
            end
        }    
    }    
}

configuration TestJavaSerial {
    instance serial : SerialJava
}
