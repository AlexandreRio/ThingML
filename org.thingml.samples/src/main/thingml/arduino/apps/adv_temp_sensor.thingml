import "../devices/soft_temperature_sensor.thingml"
import "../bricks/led.thingml"
import "../bricks/lcd_screen.thingml"

thing AdvTempSensor includes SoftTemperatureSensorMsgs, LedMsgs, LcdScreenMsgs
{
	property low_alarm : UInt8 = 24
	property high_alarm : UInt8 = 28
	
    required port LcdScreen
    {
        sends clear, print_value, print_string, set_cursor
    }
    
	required port SoftTempSensorAlarms
	{
		sends activate_alarms, deactivate_alarms
		receives low_temp_alarm, high_temp_alarm, no_alarm
	}

	required port SoftTempSensor 
	{
	   	sends get_temperature, reset_min_max, subscribe_temperature, unsubscribe_temperature
	    receives temperature
	}
	
	required port RedLed
	{
		sends led_on, led_off
	}

	required port GreenLed
	{
		sends led_on, led_off
	}

	statechart AdvTempSensorImpl init Running
	{            
		state Running
		{
            on entry do
                SoftTempSensorAlarms!activate_alarms (low_alarm, high_alarm)
                SoftTempSensor!subscribe_temperature (1000)
                end
                
			internal event SoftTempSensorAlarms?no_alarm
			action do
				RedLed!led_off ()
				GreenLed!led_off ()
			end

			internal event SoftTempSensorAlarms?high_temp_alarm
			action RedLed!led_on ()
			
			internal event SoftTempSensorAlarms?low_temp_alarm
			action GreenLed!led_on ()
		}

        region display init Running
    	{  		
    		state Running
    		{
    			on entry do
                    LcdScreen!print_string ("Temperature:")
                    LcdScreen!set_cursor (0, 1)
                    end
                on exit LcdScreen!clear ()
                
    			transition refresh -> Running
    			event m : SoftTempSensor?temperature
    			after LcdScreen!print_value (m.t)
    		}
    	}
    }
}

configuration AdvTempSensor
@debug "true"
@debug_message_send "high_temp_alarm"
@debug_message_send "timer_start"
@debug_message_send "activate_alarms"
{
	group red_led : Led
	set red_led.io.digital_output.pin = DigitalPin:PIN_8
	group green_led : Led
	set green_led.io.digital_output.pin = DigitalPin:PIN_9

	group soft_temp_sensor : SoftTemperatureSensor
	set soft_temp_sensor.temperature_sensor.io.analog_input.pin = AnalogPin:A_4

    instance screen : LcdScreen
    
	instance adv_temp_sensor : AdvTempSensor
	connector adv_temp_sensor.SoftTempSensor => soft_temp_sensor.soft_temperature_sensor.SoftTemperatureSensor
    connector adv_temp_sensor.SoftTempSensorAlarms => soft_temp_sensor.soft_temperature_sensor.SoftTemperatureSensorAlarms
	connector adv_temp_sensor.GreenLed => green_led.led.Led
	connector adv_temp_sensor.RedLed => red_led.led.Led
    connector adv_temp_sensor.LcdScreen => screen.LcdScreen
}