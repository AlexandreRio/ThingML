import "../core/arduino.thingml"

thing fragment ButtonMsgs {
	message press();
	message release();
}

thing Button includes ButtonMsgs, ArduinoStdlibMsgs, ThingMLScheduler
{	

	readonly property pin : DigitalPin = DigitalPin:PIN_3
	
	// Events generated by the buttons
	provided port Button {
		sends press
		sends release
	}
	
	required port DigitalIO
    {
        sends pinMode, digitalRead, digitalWrite
		receives digitalReadResult    
    }
	
	required port Polling {
		receives poll
	}
	
	 statechart ButtonImpl init Released {
        
        property debounce : Int8 = 20
        
        on entry do
        	DigitalIO!pinMode(pin, PinMode:INPUT)
        	DigitalIO!digitalWrite(pin, DigitalState:HIGH) // pull-up
        	debounce = 20
        end
        
        internal event Polling?poll
            action do
            	if (debounce > 0) debounce = debounce - 1
            	if (debounce == 0) DigitalIO!digitalRead(pin)
            end
        
        state Released {
            transition pressed -> Pressed
            event m: DigitalIO?digitalReadResult
            guard m.value == DigitalState:HIGH and m.pin == pin 
            // action debounce = 20
            action Button!press()
        }
        
        state Pressed {
            transition pressed -> Released
            event m: DigitalIO?digitalReadResult
            guard m.value == DigitalState:LOW and m.pin == pin
            // action debounce = 20
            action Button!release()
        }
    }
}