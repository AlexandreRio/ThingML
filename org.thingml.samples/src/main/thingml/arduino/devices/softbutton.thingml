import "button.thingml"
import "softtimer.thingml"

thing fragment SoftButtonMsgs {
	message click();
	message doubleclick();
	message longpress();
}

thing SoftButton includes ButtonMsgs, SoftButtonMsgs, TimerMsgs
{	

	readonly property long_delay : Int16 = 2000
	readonly property double_delay : Int16 = 250

	required port button {
		receives press, release
	}
	
	required port timer {
		sends timer_start, timer_cancel
		receives timer_timeout
	}

	provided port softButton {
		sends click, doubleclick, longpress
	}

	 statechart SoftButtonImpl init Idle {
       
        state Idle {
            transition pressed -> Pressed
            event m: button?press
        }
        
        state Pressed {
			on entry timer!timer_start(long_delay)
			
			transition long -> Idle
			event timer?timer_timeout
			after softButton!longpress()
			
			transition click -> Released
			event button?release
			action timer!timer_cancel()
        }
        
        state Released {
        	on entry timer!timer_start(double_delay)
        	
        	transition long -> Idle
			event timer?timer_timeout
			after softButton!click()
			
			transition pressed -> Idle
            event m: button?press
            after do 
            	timer!timer_cancel()
            	softButton!doubleclick()
            end
        
        }
    }
}