import "../core/arduino.thingml"
import "../core/analog_input.thingml"

thing fragment TemperatureSensorMsgs 
{
	message read_temperature ();
	message temperature_value (val : Int16);
}

thing TemperatureSensor includes TemperatureSensorMsgs, AnalogInputMsgs
@c_header 
"
#include <math.h>
int temperature (int RawADC) {
 double Temp;
 Temp = log(((10240000/RawADC) - 10000));
 Temp = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * Temp * Temp ))* Temp );
 Temp = Temp - 273.15;            // Convert Kelvin to Celcius
 return (int)Temp;
}
"
{   
    property temp : Int16 = 0
    
	provided port TemperatureSensor 
    {
		receives read_temperature
		sends temperature_value
	}

    required port AnalogInput
    {
        receives analog_input_value
        sends read_analog_input    
    }
    
    statechart TempSensorImpl init Read 
    {    
        state Running 
        {   
            internal event m : AnalogInput?analog_input_value
    	    action do
                TemperatureSensor!temperature_value ((temp + 'temperature ('& m.value &')') / 2)
                temp = 'temperature ('& m.value &')'
                end
            
        	transition force_reading -> Read
            event TemperatureSensor?read_temperature
        	action AnalogInput!read_analog_input ()
        }        
        
        state Read
        {
            transition read -> Running
            event m : AnalogInput?analog_input_value
    	    action do
                temp = 'temperature ('& m.value &')'     
                TemperatureSensor!temperature_value ('temperature ('& m.value &')')
                end
        }
    }
}


configuration fragment TemperatureSensor
{
    group io : OnChangeAnalogInput
    	set io.analog_input.refresh_rate = 500

    instance temperature_sensor : TemperatureSensor
    connector temperature_sensor.AnalogInput => io.analog_input.AnalogInput
} 