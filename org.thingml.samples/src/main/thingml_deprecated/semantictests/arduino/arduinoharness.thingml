import "../testharness.thingml"
import "../../arduino/core/arduino.thingml"
//import "../../arduino/devices/led.thingml"

thing ArduinoHarness includes TestHarness, ThingMLScheduler /*, LEDMsgs */ {
	
	required port polling {
        receives poll
    }
    
    required port led {
  //  	sends led_on
    }
    
	statechart ArduinoHarness init Testing {
		
		on entry 'Serial.begin(9600);'
		
		state Testing {
			
			internal event polling?poll
            guard 'Serial.available()' > 0
            action test!testIn('(char)Serial.read()')
            
            internal event m : test?testOut
            action 'Serial.print(' & m.c & ');'
            
            transition -> Failed 
            event test?testFailure
            action 'Serial.print(" *FAILURE* ");'
			
		}
		
		state Failed {
		//	on entry led!led_on()
		}
	}
}

configuration fragment ArduinoHarness {
	instance arduino : Arduino
//	instance led : LED
//		set pin = DigitalPin:PIN_13 
//	connector led.DigitalIO => arduino.DigitalIO
	instance harness : ArduinoHarness
//	connector harness.led => led.LED	
}