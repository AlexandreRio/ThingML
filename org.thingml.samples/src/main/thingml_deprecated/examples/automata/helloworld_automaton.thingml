// Definition of a flat state machine
// which transforms 'hello' into 'world'
thing Hello @c_code "generate"
{

	message h();
	message e();
	message l();
	message o();
	
	message w();
	message r();
	message l();
	message d();

	provided port IO {
		receives h,e,l,o
		sends w,o,r,l,d
	}
	
	statechart Hello init Init {

		state Init {
			on entry print "Welcome!\n"
			transition -> H event IO?h
		}
		state H {
			on entry do IO!w() print "w" end
			transition -> E event IO?e
		}
		state E {
			transition -> L1 event IO?l action do IO!w() print "o" end
		}
		state L1 {
			transition -> L2 event IO?l action do IO!w() print "r" end
		}
		state L2 {
			transition -> O event IO?o action do IO!w() print "l" end
		}
		state O {
			on entry do IO!w() print "d" end
			on exit print "Bye!\n"
			transition -> Init
		}
	}
}

configuration HelloStateMachine {
	instance hello : Hello
}