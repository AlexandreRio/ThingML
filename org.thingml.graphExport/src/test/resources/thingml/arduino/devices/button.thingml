import "../core/arduino.thingml"

thing fragment ButtonMsgs {
	message press();
	message release();
}

thing Button includes ButtonMsgs, SchedulerMsgs, ArduinoStdlibMsgs
{	

	readonly property pin : DigitalPin = DigitalPin:PIN_3
	
	// Events generated by the buttons
	provided port Button {
		sends press
		sends release
	}
	
	required port DigitalIO
    {
        sends pinMode, digitalRead, digitalWrite
		receives digitalReadResult    
    }
	
	required port Polling {
		receives loop
	}
	
	 statechart ButtonImpl init Released {
        
        on entry do
        	DigitalIO!pinMode(pin, PinMode:INPUT)
        	DigitalIO!digitalWrite(pin, DigitalState:HIGH) // pull-up
        end
        
        internal event Polling?loop
            action DigitalIO!digitalRead(pin)
        
        state Released {
            transition pressed -> Pressed
            event m: DigitalIO?digitalReadResult
            guard m.value == DigitalState:LOW
            action Button!press()
        }
        
        state Pressed {
            transition pressed -> Pressed
            event m: DigitalIO?digitalReadResult
            guard m.value == DigitalState:HIGH
            action Button!release()
        }
    }
}