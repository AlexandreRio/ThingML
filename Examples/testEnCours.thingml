datatype Integer
    @js_type "short";

thing fragment TestMsgs {
    message testIn(c : Integer);    
}

thing TestMixStreamsAndEvent includes TestMsgs
@test "ab # 12"
@test "ac # 13"
@test "ad # 14"
{
    provided port harnessOut {
        sends testIn     
    }
    
    required port harnessIn {
        receives testIn        
    }
	 
	statechart TestInit init S1 {

		state S1 {
            on entry do
                //harnessOut!testIn(1)
                harnessOut!testIn(2)
                //harnessOut!testIn(3)
                //harnessOut!testIn(4)
            end
			
            internal
			stream s1 from event harnessIn?testIn
			trigger s1->c == 1
			action print "1"

			transition -> S2
            //internal
			event e : harnessIn?testIn
			guard e.c == 2

            transition -> S3
			event e : harnessIn?testIn
			guard e.c == 3

            transition -> S4
			event e : harnessIn?testIn
			guard e.c == 4

            
		}

		state S2 {
            on entry do
                print "S2"
            end
		}

        state S3 {
            on entry do
                print "S3"
            end
		}

        state S4 {
            on entry do
                print "S4"
            end
		}
	}
}

configuration testCfg {
    instance test : TestMixStreamsAndEvent
    connector test.harnessIn => test.harnessOut
}