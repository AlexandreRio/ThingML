datatype Double 
    @js_type "double";

thing fragment SenderMsgs {
    message forwardMessage();
    message forwardMessageWithParams(p1 : Double, p2 : Double, p3 : Double, p4 : Double, p5 : Double);
    message forwardWithModif(p1 : Double, p2 : Double, p3 : Double, p4 : Double, p5 : Double);
    
    message endBench();
}

thing Sender includes SenderMsgs {
    required port senderCepService {
        sends forwardMessage, forwardMessageWithParams, forwardWithModif, endBench
    }
    
    required port senderService {
        sends forwardMessage, forwardMessageWithParams, forwardWithModif, endBench
    }
        
    property nbIter : Double = 100000
    statechart Sender init Idle {        
        state Idle {
         on entry do
            var i :Double = 0
            'console.log("START TIME CEP : " + process.hrtime());'
            while (i<nbIter) do
                senderCepService!forwardMessage()
                senderCepService!forwardMessageWithParams(1,2,3,4,5)
                senderCepService!forwardWithModif(1,2,3,4,5)
                i = i + 1
            end
            senderCepService!endBench()
         end    
        }
    }
}
