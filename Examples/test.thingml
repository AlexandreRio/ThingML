/*
Expected result : 
Init
cep message receive.
cep2 message receive with values (8;24).
cep2 message receive with values (21;25).
cep3 message receive.
cep3 message receive.
cep4 message receive with values (1;3;11).
cep4 message receive with values (4;6;17).
cep5 message receive with values (10;40;90).
*/

datatype Integer
    @js_type "short"
    @java_type "int";
    
thing fragment TestGuardMsgs {
    message m1(x : Integer);    
}
    

thing TestGuardAutoTransition includes TestGuardMsgs {

  function f() : Boolean do
    return true
  end
  
  provided port send {
      sends m1
      }
      
      required port recv {
          receives m1
          }

	statechart TestGuardAutoTransition init I {
		state I {
			//on entry harnessOut!testOut('\'I\'')
            on entry do
                print "I"
                send!m1(1)
                
                
                //send!m1(2)
            end			

			transition -> J
            guard f()
			//action harnessOut!testOut('\'J\'')
						
			transition -> K
			event m : recv?m1
			guard m.x == '\'t\''
		}
		state J {
			on entry do
                print "J"
                send!m1(3)
            end
			
			transition -> K
			event m : recv?m1
			guard m.x == 3
		}
		state K {
			on entry do
                print "K"
                send!m1(4)
            end
			
			internal
			event m : recv?m1
			guard m.x == 4
		}
	}
}


configuration sampleCfg {
    instance t : TestGuardAutoTransition
    connector t.recv => t.send    
}
