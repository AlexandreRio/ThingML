datatype Integer
    @js_type "short"
    @java_type "int";

thing fragment Demo1Msgs {
    message m1(v1 : Integer, v2 : Integer);
    message m2(val1 : Integer, val2 : Integer);
    message m3();
    message m4();
}

thing Demo1 includes Demo1Msgs{
    required port receiveService {
        receives m1, m2, m3, m4
    }
    
    provided port sendService {
        sends m1, m2, m3, m4
    }
    
    function toto () : Integer do
        return 56
    end 
    
    function toto2 (x : Integer, y:Integer, z : Integer, w : Integer ) : Integer do
        return x + y + z + w
    end 
    
    /*stream test do
        from e : receiveService?m1
        select a : e.v1, b : e.v2
        action sendService!m2(a,b)
    end*/
    
       
    statechart Demo1 init S1 {
        state S1 {
            on entry do
                print "Entry S1"
                sendService!m1(5,7)
                /*sendService!m2(2,5)
                sendService!m3()
                sendService!m4()*/
            end
             
            internal
            event e : receiveService?m1
            action print "YouYou " +  e.v1 + "; " + e.v2 + #1            
            /*internal
            event e : receiveService?m2
            action print "YouYou cep2" 
            
            internal
            event e : receiveService?cep3
            action print "YouYou cep3"  */  
        }
    }
    
}

configuration demo1Cfg {
    instance demo : Demo1
    connector demo.receiveService => demo.sendService    
}
