import "../core/typedefs.thingml"
import "../core/arduino.thingml"

thing fragment SerialMsgs {
	message printByte(b : Byte);
	message printMessage(msg : String);
	message printValue(v : Int16);
	message receiveByte(b : Byte);
}

thing Serial includes SerialMsgs, ArduinoMsgs
{

	provided port serial 
    {
		sends receiveByte
        receives printByte, printMessage, printValue
	}

    required port polling 
    {
        receives loop
    }

    statechart SerialImpl init Receiving {
            
        state Receiving {
            on entry 'Serial.begin(9600);'
            
            internal event polling?loop
            guard 'Serial.available()' > 0
            action serial!receiveByte('(char)Serial.read()')
            
            internal event m : serial?printByte
            action 'Serial.print(' & m.b & ');'
            
            internal event m : serial?printMessage
            action 'Serial.print(' & m.msg & ');'
            
            internal event m : serial?printValue
            action 'Serial.print(' & m.v & ', DEC);'
            
        }
        
    }
}