import "../devices/serial.thingml"
import "../devices/tempsensor.thingml"

thing SerialTempSensor includes SerialMsgs, TempSensorMsgs
{
	required port serial 
    {	
		sends printMessage, printValue
		receives receiveByte
	}
	
	required port sensor 
    {	
		sends subscribe_temperature, unsubscribe_temperature
		sends reset_min_max, get_temperature
		receives temperature
	}

    statechart SerialTempSensorImpl init Running {
        
        state Running {
            
        	internal event m : serial?receiveByte
        	guard m.b == '\'t\''
        	action sensor!get_temperature() 
        	
        	internal event m : serial?receiveByte
        	guard m.b == '\'s\''
        	action sensor!subscribe_temperature(10) 
        	
        	internal event m : serial?receiveByte
        	guard m.b == '\'u\''
        	action sensor!unsubscribe_temperature()
        	
        	internal event m : serial?receiveByte
        	guard m.b == '\'r\''
        	action sensor!reset_min_max()
        	
        	internal event m : sensor?temperature
        	action do
        		serial!printMessage("Temperature: ")
        		serial!printValue(m.t)
        		serial!printMessage(" min=")
        		serial!printValue(m.min)
        		serial!printMessage(" max=")
        		serial!printValue(m.max)
        		serial!printMessage("\n")
        	end       
           
        }
    }
}

configuration SerialTempSensor {

	instance arduino : Arduino
	
	instance sensor_timer : SoftTimer
	
	instance tempsensor : TempSensor set pin = AnalogPin:A_0
	connector tempsensor.timer => sensor_timer.timer
	connector tempsensor.adc => arduino.AnalogIO
	
	instance serial : Serial
	
	instance app : SerialTempSensor
	connector app.sensor => tempsensor.tempsensor
	connector app.serial => serial.serial
	
}